name: daily-epg1-crawl

on:
  schedule:
    # Run at 01:00 Asia/Ho_Chi_Minh each day -> 18:00 UTC previous day
    - cron: '0 18 * * *'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  crawl:
    runs-on: ubuntu-latest
    outputs:
      channels_processed: ${{ steps.stats.outputs.channels_processed }}
      programmes_total: ${{ steps.stats.outputs.programmes_total }}
    env:
      # Number of days to fetch starting from "today in Hanoi"
      # Default behavior in craw1.py is to fetch 2 days (0 and 1).
      # You can override days by setting EPG_DAY_OFFSETS like "0,1,2"
      EPG_DAY_OFFSETS: "0,1"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 python-dateutil pytz lxml

      - name: Run crawler (produce epg1.xml)
        id: run_crawl
        run: |
          python3 craw1.py
        shell: bash

      - name: Verify epg1.xml produced
        id: verify
        run: |
          if [ ! -f epg1.xml ]; then echo "EPG file missing" && exit 2; fi
          echo "epg1_size_bytes=$(wc -c < epg1.xml)" >> $GITHUB_OUTPUT
          echo "epg1_programme_count=$(xmllint --xpath 'count(//programme)' epg1.xml 2>/dev/null || echo 0)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Collect statistics
        id: stats
        run: |
          CHS=0
          PROGS=0
          if [ -f channels_processed.txt ]; then
            CHS=$(cat channels_processed.txt | sed '/^\s*$/d' | wc -l)
          fi
          if [ -f programmes_count.txt ]; then
            PROGS=$(cat programmes_count.txt | tr -d '[:space:]')
          else
            PROGS=$(xmllint --xpath 'count(//programme)' epg1.xml 2>/dev/null || echo 0)
          fi
          echo "channels_processed=$CHS" >> $GITHUB_OUTPUT
          echo "programmes_total=$PROGS" >> $GITHUB_OUTPUT
        shell: bash

      - name: Summary (log)
        run: |
          echo "EPG run summary:"
          echo " - Channels processed: ${{ steps.stats.outputs.channels_processed }}"
          echo " - Programmes total: ${{ steps.stats.outputs.programmes_total }}"
          echo " - EPG file size (bytes): ${{ steps.verify.outputs.epg1_size_bytes }}"
          echo " - Programme nodes in XML: ${{ steps.verify.outputs.epg1_programme_count }}"
        shell: bash

      - name: Commit epg1.xml back to repo
        if: always()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add epg1.xml || true
          git commit -m "Auto update epg1.xml: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" || echo "No changes to commit"
          git push origin HEAD || echo "Push failed"
        shell: bash

      - name: Show epg1.xml head for debug
        if: always()
        run: |
          echo "=== epg1.xml size ==="
          if [ -f epg1.xml ]; then
            wc -c epg1.xml
            echo "=== first 200 lines of epg1.xml ==="
            sed -n '1,200p' epg1.xml || true
          else
            echo "epg1.xml not found"
          fi
        shell: bash

      - name: Upload epg1 artifact
        uses: actions/upload-artifact@v4
        with:
          name: epg1-xml
          path: epg1.xml

      - name: Upload debug & stats
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-and-stats
          path: |
            debug_*.html
            channels_processed.txt
            programmes_count.txt
          if-no-files-found: ignore
          
